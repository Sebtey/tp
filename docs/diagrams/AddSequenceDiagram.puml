@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TaskWiseParser" as TaskWiseParser LOGIC_COLOR
participant ":AddCommandParser" as AddCommandParser LOGIC_COLOR
participant "a:AddCommand" as AddCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":TaskWise" as TaskWise MODEL_COLOR
end box

[-> LogicManager : execute(add t/Complete DG)
activate LogicManager

LogicManager -> TaskWiseParser : parseCommand(add t/Complete DG)
activate TaskWiseParser

create AddCommandParser
TaskWiseParser -> AddCommandParser
activate AddCommandParser

AddCommandParser --> TaskWiseParser
deactivate AddCommandParser

TaskWiseParser -> AddCommandParser : parse(t/Complete DG)
activate AddCommandParser

create AddCommand
AddCommandParser -> AddCommand
activate AddCommand

AddCommand --> AddCommandParser
deactivate AddCommand

AddCommandParser --> TaskWiseParser
deactivate AddCommandParser

TaskWiseParser --> LogicManager
deactivate TaskWiseParser
destroy AddCommandParser

LogicManager -> AddCommand : execute()
activate AddCommand

AddCommand -> Model : addTask()
activate Model

Model -> TaskWise : addTask()
activate TaskWise

TaskWise --> Model
deactivate TaskWise

Model -> Model : updateFilteredTaskList()
activate Model

Model --> Model
deactivate Model

Model --> AddCommand
deactivate Model

create CommandResult
AddCommand -> CommandResult
activate CommandResult

CommandResult --> AddCommand
deactivate CommandResult

AddCommand --> LogicManager : result
deactivate AddCommand
AddCommand -[hidden]-> LogicManager : result
destroy AddCommand

[<--LogicManager
deactivate LogicManager
@enduml
